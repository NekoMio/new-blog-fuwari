# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Astro Deploy

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v3
      - name: Setup PNPM
        uses: pnpm/action-setup@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
      - run: pnpm install
      - run: pnpm run build
      - name: Upload result for build
        uses: actions/upload-artifact@v4
        with:
          name: public
          path: ./dist
  
  push_to_web:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download result for build
        uses: actions/download-artifact@v4
        with:
          name: public
          path: ./dist
      - name: Install SSH key
        uses: NekoMio/ssh-key-action@v2.3.1.1
        with:
          key: ${{ secrets.INPUT_DEPLOY_KEY }}
          name: id_rsa # optional
          known_hosts: unnecessary
          if_key_exists: fail
      - run: git clone git@github.com:NekoMio/Nekomio.github.io.git pages
      - run: rm pages/* -rf
      - run: ls ./dist/
      - run: cp ./dist/* ./pages/ -rf
      - run: cd pages && git add .
      - run: git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
      - run: git config --global user.name "github-actions[bot]"
      - run: cd pages && git commit -m "`date`"
      - run: cd pages && git push origin master
    
  deploy_to_server:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download result for build
        uses: actions/download-artifact@v4
        with:
          name: public
          path: ./dist
      - name: Copy files to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          source: "./dist/*" # 如果有构建步骤，这里应指向构建输出目录，例如 "./dist/*" 或 "./build/*"
          target: ${{ secrets.REMOTE_PATH }}
          rm: true
